
02_Framework：框架代码


03_DemoB：用abp app模板创建。包含abp完成的模块依赖，带有web界面
DemoB:https://localhost:44304
IdentityServer:https://localhost:44325

04_DemoC：用abp module模板创建。只依赖自身的模块和Abp框架的模块，纯WEB API
DemoC:https://localhost:44356

遗留问题：
Mk.DemoB.BackgroundJobs
使用hangfire时，周期任务的mysql会报异常。所以需要将 MySqlConnector 升级到1.0版本再看看
现在 Volo.Abp.EntityFrameworkCore.MySQL >>Pomelo.EntityFrameworkCore.MySql (3.1.1)>>MySqlConnector (0.61.0)还不能依赖1.0版本，所以要延后升级




数据里操作还是要放到 Mk.DemoB.EntityFrameworkCore 层的对应的Repository中。放在如Domain和Application中有两个问题
1、这两个层需要引用Microsoft.EntityFrameworkCore ，否则一些扩展方法没有，eg：ToListAsync()
2、如 Mk.DemoB.EntityFrameworkCore 中定义的 IncludeDetails 没办法使用上
每个实体定义仓储的好处
1、可以强制把数据库业务写到仓储中
2、更好的封装了数据库操作。  方便在其他层注入仓储，获取数据操作

定义端口规范
http	**02
htps	**05

demob.api      44305   44302
democ.api      44405   44402
demo.gateway   44505   44502 


--demob
docker build -f Dockerfile -t mk.demob.api ../../../

docker run --name mk.demob.api -p 44302:44302  -v /e/Code/open_source/Abp/Leopard.Abp/Docker/App/Mk.DemoB/Logs:/app/Logs -d mk.demob.api

docker exec -it mk.demob /bin/bash




--democ
docker build -f Dockerfile -t mk.democ.api ../../../

docker run --name mk.democ.api -p 44402:44402  -v /e/Code/open_source/Abp/Leopard.Abp/Docker/App/Mk.DemoC/Logs:/app/Logs -d mk.democ.api


docker exec -it mk.democ /bin/bash


构建：docker-compose build
启动：docker-compose up
      docker-compose up -d    -d代表在后台运行
销毁：docker-compose down
重启：docker-compose restart


git clone https://github.com/heyuquan/Leopard.Abp.git
git pull https://github.com/heyuquan/Leopard.Abp.git 

/usr/local/Leopard.Abp/Environment

elastic：http://134.175.121.78:9200
kibana：http://134.175.121.78:5601/
consul:http://134.175.121.78:8500/